/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthImport } from './routes/_auth'
import { Route as ProfileRouteImport } from './routes/profile/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileNewUserImport } from './routes/profile/new-user'
import { Route as ProfileNewStudentImport } from './routes/profile/new-student'
import { Route as ProfileCreatePasswordImport } from './routes/profile/create-password'
import { Route as InvitationsTokenImport } from './routes/invitations.$token'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as AuthSignInImport } from './routes/_auth/sign-in'
import { Route as AuthenticatedAdminRouteImport } from './routes/_authenticated/admin/route'
import { Route as AuthenticatedAdminSubjectsIndexImport } from './routes/_authenticated/admin/subjects/index'
import { Route as AuthenticatedAdminCbtsIndexImport } from './routes/_authenticated/admin/cbts/index'
import { Route as AuthenticatedAdminUsersTeachersImport } from './routes/_authenticated/admin/users/teachers'
import { Route as AuthenticatedAdminUsersStudentsImport } from './routes/_authenticated/admin/users/students'
import { Route as AuthenticatedAdminUsersInvitationsImport } from './routes/_authenticated/admin/users/invitations'
import { Route as AuthenticatedAdminUsersAdminsImport } from './routes/_authenticated/admin/users/admins'
import { Route as AuthenticatedAdminCbtsCbtIdWithNavbarImport } from './routes/_authenticated/admin/cbts/$cbtId/_withNavbar'
import { Route as AuthenticatedAdminCbtsCbtIdWithNavbarIndexImport } from './routes/_authenticated/admin/cbts/$cbtId/_withNavbar.index'
import { Route as AuthenticatedAdminCbtsCbtIdWithNavbarSettingImport } from './routes/_authenticated/admin/cbts/$cbtId/_withNavbar.setting'
import { Route as AuthenticatedAdminCbtsCbtIdWithNavbarMemberImport } from './routes/_authenticated/admin/cbts/$cbtId/_withNavbar.member'
import { Route as AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexImport } from './routes/_authenticated/admin/cbts/$cbtId/questions/$cbtModuleId/index'

// Create Virtual Routes

const AuthenticatedAdminCbtsCbtIdImport = createFileRoute(
  '/_authenticated/admin/cbts/$cbtId',
)()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRouteRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileNewUserRoute = ProfileNewUserImport.update({
  id: '/new-user',
  path: '/new-user',
  getParentRoute: () => ProfileRouteRoute,
} as any)

const ProfileNewStudentRoute = ProfileNewStudentImport.update({
  id: '/new-student',
  path: '/new-student',
  getParentRoute: () => ProfileRouteRoute,
} as any)

const ProfileCreatePasswordRoute = ProfileCreatePasswordImport.update({
  id: '/create-password',
  path: '/create-password',
  getParentRoute: () => ProfileRouteRoute,
} as any)

const InvitationsTokenRoute = InvitationsTokenImport.update({
  id: '/invitations/$token',
  path: '/invitations/$token',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)

const AuthenticatedAdminRouteRoute = AuthenticatedAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAdminCbtsCbtIdRoute =
  AuthenticatedAdminCbtsCbtIdImport.update({
    id: '/cbts/$cbtId',
    path: '/cbts/$cbtId',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminSubjectsIndexRoute =
  AuthenticatedAdminSubjectsIndexImport.update({
    id: '/subjects/',
    path: '/subjects/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminCbtsIndexRoute =
  AuthenticatedAdminCbtsIndexImport.update({
    id: '/cbts/',
    path: '/cbts/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminUsersTeachersRoute =
  AuthenticatedAdminUsersTeachersImport.update({
    id: '/users/teachers',
    path: '/users/teachers',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminUsersStudentsRoute =
  AuthenticatedAdminUsersStudentsImport.update({
    id: '/users/students',
    path: '/users/students',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminUsersInvitationsRoute =
  AuthenticatedAdminUsersInvitationsImport.update({
    id: '/users/invitations',
    path: '/users/invitations',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminUsersAdminsRoute =
  AuthenticatedAdminUsersAdminsImport.update({
    id: '/users/admins',
    path: '/users/admins',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminCbtsCbtIdWithNavbarRoute =
  AuthenticatedAdminCbtsCbtIdWithNavbarImport.update({
    id: '/_withNavbar',
    getParentRoute: () => AuthenticatedAdminCbtsCbtIdRoute,
  } as any)

const AuthenticatedAdminCbtsCbtIdWithNavbarIndexRoute =
  AuthenticatedAdminCbtsCbtIdWithNavbarIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAdminCbtsCbtIdWithNavbarRoute,
  } as any)

const AuthenticatedAdminCbtsCbtIdWithNavbarSettingRoute =
  AuthenticatedAdminCbtsCbtIdWithNavbarSettingImport.update({
    id: '/setting',
    path: '/setting',
    getParentRoute: () => AuthenticatedAdminCbtsCbtIdWithNavbarRoute,
  } as any)

const AuthenticatedAdminCbtsCbtIdWithNavbarMemberRoute =
  AuthenticatedAdminCbtsCbtIdWithNavbarMemberImport.update({
    id: '/member',
    path: '/member',
    getParentRoute: () => AuthenticatedAdminCbtsCbtIdWithNavbarRoute,
  } as any)

const AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexRoute =
  AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexImport.update({
    id: '/questions/$cbtModuleId/',
    path: '/questions/$cbtModuleId/',
    getParentRoute: () => AuthenticatedAdminCbtsCbtIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof AuthImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/invitations/$token': {
      id: '/invitations/$token'
      path: '/invitations/$token'
      fullPath: '/invitations/$token'
      preLoaderRoute: typeof InvitationsTokenImport
      parentRoute: typeof rootRoute
    }
    '/profile/create-password': {
      id: '/profile/create-password'
      path: '/create-password'
      fullPath: '/profile/create-password'
      preLoaderRoute: typeof ProfileCreatePasswordImport
      parentRoute: typeof ProfileRouteImport
    }
    '/profile/new-student': {
      id: '/profile/new-student'
      path: '/new-student'
      fullPath: '/profile/new-student'
      preLoaderRoute: typeof ProfileNewStudentImport
      parentRoute: typeof ProfileRouteImport
    }
    '/profile/new-user': {
      id: '/profile/new-user'
      path: '/new-user'
      fullPath: '/profile/new-user'
      preLoaderRoute: typeof ProfileNewUserImport
      parentRoute: typeof ProfileRouteImport
    }
    '/_authenticated/admin/users/admins': {
      id: '/_authenticated/admin/users/admins'
      path: '/users/admins'
      fullPath: '/admin/users/admins'
      preLoaderRoute: typeof AuthenticatedAdminUsersAdminsImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/users/invitations': {
      id: '/_authenticated/admin/users/invitations'
      path: '/users/invitations'
      fullPath: '/admin/users/invitations'
      preLoaderRoute: typeof AuthenticatedAdminUsersInvitationsImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/users/students': {
      id: '/_authenticated/admin/users/students'
      path: '/users/students'
      fullPath: '/admin/users/students'
      preLoaderRoute: typeof AuthenticatedAdminUsersStudentsImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/users/teachers': {
      id: '/_authenticated/admin/users/teachers'
      path: '/users/teachers'
      fullPath: '/admin/users/teachers'
      preLoaderRoute: typeof AuthenticatedAdminUsersTeachersImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/cbts/': {
      id: '/_authenticated/admin/cbts/'
      path: '/cbts'
      fullPath: '/admin/cbts'
      preLoaderRoute: typeof AuthenticatedAdminCbtsIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/subjects/': {
      id: '/_authenticated/admin/subjects/'
      path: '/subjects'
      fullPath: '/admin/subjects'
      preLoaderRoute: typeof AuthenticatedAdminSubjectsIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/cbts/$cbtId': {
      id: '/_authenticated/admin/cbts/$cbtId'
      path: '/cbts/$cbtId'
      fullPath: '/admin/cbts/$cbtId'
      preLoaderRoute: typeof AuthenticatedAdminCbtsCbtIdImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/cbts/$cbtId/_withNavbar': {
      id: '/_authenticated/admin/cbts/$cbtId/_withNavbar'
      path: '/cbts/$cbtId'
      fullPath: '/admin/cbts/$cbtId'
      preLoaderRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarImport
      parentRoute: typeof AuthenticatedAdminCbtsCbtIdRoute
    }
    '/_authenticated/admin/cbts/$cbtId/_withNavbar/member': {
      id: '/_authenticated/admin/cbts/$cbtId/_withNavbar/member'
      path: '/member'
      fullPath: '/admin/cbts/$cbtId/member'
      preLoaderRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarMemberImport
      parentRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarImport
    }
    '/_authenticated/admin/cbts/$cbtId/_withNavbar/setting': {
      id: '/_authenticated/admin/cbts/$cbtId/_withNavbar/setting'
      path: '/setting'
      fullPath: '/admin/cbts/$cbtId/setting'
      preLoaderRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarSettingImport
      parentRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarImport
    }
    '/_authenticated/admin/cbts/$cbtId/_withNavbar/': {
      id: '/_authenticated/admin/cbts/$cbtId/_withNavbar/'
      path: '/'
      fullPath: '/admin/cbts/$cbtId/'
      preLoaderRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarIndexImport
      parentRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarImport
    }
    '/_authenticated/admin/cbts/$cbtId/questions/$cbtModuleId/': {
      id: '/_authenticated/admin/cbts/$cbtId/questions/$cbtModuleId/'
      path: '/questions/$cbtModuleId'
      fullPath: '/admin/cbts/$cbtId/questions/$cbtModuleId'
      preLoaderRoute: typeof AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexImport
      parentRoute: typeof AuthenticatedAdminCbtsCbtIdImport
    }
  }
}

// Create and export the route tree

interface ProfileRouteRouteChildren {
  ProfileCreatePasswordRoute: typeof ProfileCreatePasswordRoute
  ProfileNewStudentRoute: typeof ProfileNewStudentRoute
  ProfileNewUserRoute: typeof ProfileNewUserRoute
}

const ProfileRouteRouteChildren: ProfileRouteRouteChildren = {
  ProfileCreatePasswordRoute: ProfileCreatePasswordRoute,
  ProfileNewStudentRoute: ProfileNewStudentRoute,
  ProfileNewUserRoute: ProfileNewUserRoute,
}

const ProfileRouteRouteWithChildren = ProfileRouteRoute._addFileChildren(
  ProfileRouteRouteChildren,
)

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface AuthenticatedAdminCbtsCbtIdWithNavbarRouteChildren {
  AuthenticatedAdminCbtsCbtIdWithNavbarMemberRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarMemberRoute
  AuthenticatedAdminCbtsCbtIdWithNavbarSettingRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarSettingRoute
  AuthenticatedAdminCbtsCbtIdWithNavbarIndexRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarIndexRoute
}

const AuthenticatedAdminCbtsCbtIdWithNavbarRouteChildren: AuthenticatedAdminCbtsCbtIdWithNavbarRouteChildren =
  {
    AuthenticatedAdminCbtsCbtIdWithNavbarMemberRoute:
      AuthenticatedAdminCbtsCbtIdWithNavbarMemberRoute,
    AuthenticatedAdminCbtsCbtIdWithNavbarSettingRoute:
      AuthenticatedAdminCbtsCbtIdWithNavbarSettingRoute,
    AuthenticatedAdminCbtsCbtIdWithNavbarIndexRoute:
      AuthenticatedAdminCbtsCbtIdWithNavbarIndexRoute,
  }

const AuthenticatedAdminCbtsCbtIdWithNavbarRouteWithChildren =
  AuthenticatedAdminCbtsCbtIdWithNavbarRoute._addFileChildren(
    AuthenticatedAdminCbtsCbtIdWithNavbarRouteChildren,
  )

interface AuthenticatedAdminCbtsCbtIdRouteChildren {
  AuthenticatedAdminCbtsCbtIdWithNavbarRoute: typeof AuthenticatedAdminCbtsCbtIdWithNavbarRouteWithChildren
  AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexRoute: typeof AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexRoute
}

const AuthenticatedAdminCbtsCbtIdRouteChildren: AuthenticatedAdminCbtsCbtIdRouteChildren =
  {
    AuthenticatedAdminCbtsCbtIdWithNavbarRoute:
      AuthenticatedAdminCbtsCbtIdWithNavbarRouteWithChildren,
    AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexRoute:
      AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexRoute,
  }

const AuthenticatedAdminCbtsCbtIdRouteWithChildren =
  AuthenticatedAdminCbtsCbtIdRoute._addFileChildren(
    AuthenticatedAdminCbtsCbtIdRouteChildren,
  )

interface AuthenticatedAdminRouteRouteChildren {
  AuthenticatedAdminUsersAdminsRoute: typeof AuthenticatedAdminUsersAdminsRoute
  AuthenticatedAdminUsersInvitationsRoute: typeof AuthenticatedAdminUsersInvitationsRoute
  AuthenticatedAdminUsersStudentsRoute: typeof AuthenticatedAdminUsersStudentsRoute
  AuthenticatedAdminUsersTeachersRoute: typeof AuthenticatedAdminUsersTeachersRoute
  AuthenticatedAdminCbtsIndexRoute: typeof AuthenticatedAdminCbtsIndexRoute
  AuthenticatedAdminSubjectsIndexRoute: typeof AuthenticatedAdminSubjectsIndexRoute
  AuthenticatedAdminCbtsCbtIdRoute: typeof AuthenticatedAdminCbtsCbtIdRouteWithChildren
}

const AuthenticatedAdminRouteRouteChildren: AuthenticatedAdminRouteRouteChildren =
  {
    AuthenticatedAdminUsersAdminsRoute: AuthenticatedAdminUsersAdminsRoute,
    AuthenticatedAdminUsersInvitationsRoute:
      AuthenticatedAdminUsersInvitationsRoute,
    AuthenticatedAdminUsersStudentsRoute: AuthenticatedAdminUsersStudentsRoute,
    AuthenticatedAdminUsersTeachersRoute: AuthenticatedAdminUsersTeachersRoute,
    AuthenticatedAdminCbtsIndexRoute: AuthenticatedAdminCbtsIndexRoute,
    AuthenticatedAdminSubjectsIndexRoute: AuthenticatedAdminSubjectsIndexRoute,
    AuthenticatedAdminCbtsCbtIdRoute:
      AuthenticatedAdminCbtsCbtIdRouteWithChildren,
  }

const AuthenticatedAdminRouteRouteWithChildren =
  AuthenticatedAdminRouteRoute._addFileChildren(
    AuthenticatedAdminRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRouteRoute: typeof AuthenticatedAdminRouteRouteWithChildren
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRouteRoute: AuthenticatedAdminRouteRouteWithChildren,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRouteRouteWithChildren
  '': typeof AuthenticatedRouteWithChildren
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/sign-in': typeof AuthSignInRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/invitations/$token': typeof InvitationsTokenRoute
  '/profile/create-password': typeof ProfileCreatePasswordRoute
  '/profile/new-student': typeof ProfileNewStudentRoute
  '/profile/new-user': typeof ProfileNewUserRoute
  '/admin/users/admins': typeof AuthenticatedAdminUsersAdminsRoute
  '/admin/users/invitations': typeof AuthenticatedAdminUsersInvitationsRoute
  '/admin/users/students': typeof AuthenticatedAdminUsersStudentsRoute
  '/admin/users/teachers': typeof AuthenticatedAdminUsersTeachersRoute
  '/admin/cbts': typeof AuthenticatedAdminCbtsIndexRoute
  '/admin/subjects': typeof AuthenticatedAdminSubjectsIndexRoute
  '/admin/cbts/$cbtId': typeof AuthenticatedAdminCbtsCbtIdWithNavbarRouteWithChildren
  '/admin/cbts/$cbtId/member': typeof AuthenticatedAdminCbtsCbtIdWithNavbarMemberRoute
  '/admin/cbts/$cbtId/setting': typeof AuthenticatedAdminCbtsCbtIdWithNavbarSettingRoute
  '/admin/cbts/$cbtId/': typeof AuthenticatedAdminCbtsCbtIdWithNavbarIndexRoute
  '/admin/cbts/$cbtId/questions/$cbtModuleId': typeof AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRouteRouteWithChildren
  '': typeof AuthenticatedRouteWithChildren
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/sign-in': typeof AuthSignInRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/invitations/$token': typeof InvitationsTokenRoute
  '/profile/create-password': typeof ProfileCreatePasswordRoute
  '/profile/new-student': typeof ProfileNewStudentRoute
  '/profile/new-user': typeof ProfileNewUserRoute
  '/admin/users/admins': typeof AuthenticatedAdminUsersAdminsRoute
  '/admin/users/invitations': typeof AuthenticatedAdminUsersInvitationsRoute
  '/admin/users/students': typeof AuthenticatedAdminUsersStudentsRoute
  '/admin/users/teachers': typeof AuthenticatedAdminUsersTeachersRoute
  '/admin/cbts': typeof AuthenticatedAdminCbtsIndexRoute
  '/admin/subjects': typeof AuthenticatedAdminSubjectsIndexRoute
  '/admin/cbts/$cbtId': typeof AuthenticatedAdminCbtsCbtIdWithNavbarIndexRoute
  '/admin/cbts/$cbtId/member': typeof AuthenticatedAdminCbtsCbtIdWithNavbarMemberRoute
  '/admin/cbts/$cbtId/setting': typeof AuthenticatedAdminCbtsCbtIdWithNavbarSettingRoute
  '/admin/cbts/$cbtId/questions/$cbtModuleId': typeof AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile': typeof ProfileRouteRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/invitations/$token': typeof InvitationsTokenRoute
  '/profile/create-password': typeof ProfileCreatePasswordRoute
  '/profile/new-student': typeof ProfileNewStudentRoute
  '/profile/new-user': typeof ProfileNewUserRoute
  '/_authenticated/admin/users/admins': typeof AuthenticatedAdminUsersAdminsRoute
  '/_authenticated/admin/users/invitations': typeof AuthenticatedAdminUsersInvitationsRoute
  '/_authenticated/admin/users/students': typeof AuthenticatedAdminUsersStudentsRoute
  '/_authenticated/admin/users/teachers': typeof AuthenticatedAdminUsersTeachersRoute
  '/_authenticated/admin/cbts/': typeof AuthenticatedAdminCbtsIndexRoute
  '/_authenticated/admin/subjects/': typeof AuthenticatedAdminSubjectsIndexRoute
  '/_authenticated/admin/cbts/$cbtId': typeof AuthenticatedAdminCbtsCbtIdRouteWithChildren
  '/_authenticated/admin/cbts/$cbtId/_withNavbar': typeof AuthenticatedAdminCbtsCbtIdWithNavbarRouteWithChildren
  '/_authenticated/admin/cbts/$cbtId/_withNavbar/member': typeof AuthenticatedAdminCbtsCbtIdWithNavbarMemberRoute
  '/_authenticated/admin/cbts/$cbtId/_withNavbar/setting': typeof AuthenticatedAdminCbtsCbtIdWithNavbarSettingRoute
  '/_authenticated/admin/cbts/$cbtId/_withNavbar/': typeof AuthenticatedAdminCbtsCbtIdWithNavbarIndexRoute
  '/_authenticated/admin/cbts/$cbtId/questions/$cbtModuleId/': typeof AuthenticatedAdminCbtsCbtIdQuestionsCbtModuleIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | ''
    | '/admin'
    | '/sign-in'
    | '/dashboard'
    | '/invitations/$token'
    | '/profile/create-password'
    | '/profile/new-student'
    | '/profile/new-user'
    | '/admin/users/admins'
    | '/admin/users/invitations'
    | '/admin/users/students'
    | '/admin/users/teachers'
    | '/admin/cbts'
    | '/admin/subjects'
    | '/admin/cbts/$cbtId'
    | '/admin/cbts/$cbtId/member'
    | '/admin/cbts/$cbtId/setting'
    | '/admin/cbts/$cbtId/'
    | '/admin/cbts/$cbtId/questions/$cbtModuleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | ''
    | '/admin'
    | '/sign-in'
    | '/dashboard'
    | '/invitations/$token'
    | '/profile/create-password'
    | '/profile/new-student'
    | '/profile/new-user'
    | '/admin/users/admins'
    | '/admin/users/invitations'
    | '/admin/users/students'
    | '/admin/users/teachers'
    | '/admin/cbts'
    | '/admin/subjects'
    | '/admin/cbts/$cbtId'
    | '/admin/cbts/$cbtId/member'
    | '/admin/cbts/$cbtId/setting'
    | '/admin/cbts/$cbtId/questions/$cbtModuleId'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/_auth'
    | '/_authenticated'
    | '/_authenticated/admin'
    | '/_auth/sign-in'
    | '/_authenticated/dashboard'
    | '/invitations/$token'
    | '/profile/create-password'
    | '/profile/new-student'
    | '/profile/new-user'
    | '/_authenticated/admin/users/admins'
    | '/_authenticated/admin/users/invitations'
    | '/_authenticated/admin/users/students'
    | '/_authenticated/admin/users/teachers'
    | '/_authenticated/admin/cbts/'
    | '/_authenticated/admin/subjects/'
    | '/_authenticated/admin/cbts/$cbtId'
    | '/_authenticated/admin/cbts/$cbtId/_withNavbar'
    | '/_authenticated/admin/cbts/$cbtId/_withNavbar/member'
    | '/_authenticated/admin/cbts/$cbtId/_withNavbar/setting'
    | '/_authenticated/admin/cbts/$cbtId/_withNavbar/'
    | '/_authenticated/admin/cbts/$cbtId/questions/$cbtModuleId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRouteRoute: typeof ProfileRouteRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  InvitationsTokenRoute: typeof InvitationsTokenRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRouteRoute: ProfileRouteRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  InvitationsTokenRoute: InvitationsTokenRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile",
        "/_auth",
        "/_authenticated",
        "/invitations/$token"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/profile": {
      "filePath": "profile/route.tsx",
      "children": [
        "/profile/create-password",
        "/profile/new-student",
        "/profile/new-user"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/sign-in"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/admin",
        "/_authenticated/dashboard"
      ]
    },
    "/_authenticated/admin": {
      "filePath": "_authenticated/admin/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/admin/users/admins",
        "/_authenticated/admin/users/invitations",
        "/_authenticated/admin/users/students",
        "/_authenticated/admin/users/teachers",
        "/_authenticated/admin/cbts/",
        "/_authenticated/admin/subjects/",
        "/_authenticated/admin/cbts/$cbtId"
      ]
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in.tsx",
      "parent": "/_auth"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/invitations/$token": {
      "filePath": "invitations.$token.tsx"
    },
    "/profile/create-password": {
      "filePath": "profile/create-password.tsx",
      "parent": "/profile"
    },
    "/profile/new-student": {
      "filePath": "profile/new-student.tsx",
      "parent": "/profile"
    },
    "/profile/new-user": {
      "filePath": "profile/new-user.tsx",
      "parent": "/profile"
    },
    "/_authenticated/admin/users/admins": {
      "filePath": "_authenticated/admin/users/admins.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/users/invitations": {
      "filePath": "_authenticated/admin/users/invitations.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/users/students": {
      "filePath": "_authenticated/admin/users/students.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/users/teachers": {
      "filePath": "_authenticated/admin/users/teachers.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/cbts/": {
      "filePath": "_authenticated/admin/cbts/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/subjects/": {
      "filePath": "_authenticated/admin/subjects/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/cbts/$cbtId": {
      "filePath": "_authenticated/admin/cbts/$cbtId",
      "parent": "/_authenticated/admin",
      "children": [
        "/_authenticated/admin/cbts/$cbtId/_withNavbar",
        "/_authenticated/admin/cbts/$cbtId/questions/$cbtModuleId/"
      ]
    },
    "/_authenticated/admin/cbts/$cbtId/_withNavbar": {
      "filePath": "_authenticated/admin/cbts/$cbtId/_withNavbar.tsx",
      "parent": "/_authenticated/admin/cbts/$cbtId",
      "children": [
        "/_authenticated/admin/cbts/$cbtId/_withNavbar/member",
        "/_authenticated/admin/cbts/$cbtId/_withNavbar/setting",
        "/_authenticated/admin/cbts/$cbtId/_withNavbar/"
      ]
    },
    "/_authenticated/admin/cbts/$cbtId/_withNavbar/member": {
      "filePath": "_authenticated/admin/cbts/$cbtId/_withNavbar.member.tsx",
      "parent": "/_authenticated/admin/cbts/$cbtId/_withNavbar"
    },
    "/_authenticated/admin/cbts/$cbtId/_withNavbar/setting": {
      "filePath": "_authenticated/admin/cbts/$cbtId/_withNavbar.setting.tsx",
      "parent": "/_authenticated/admin/cbts/$cbtId/_withNavbar"
    },
    "/_authenticated/admin/cbts/$cbtId/_withNavbar/": {
      "filePath": "_authenticated/admin/cbts/$cbtId/_withNavbar.index.tsx",
      "parent": "/_authenticated/admin/cbts/$cbtId/_withNavbar"
    },
    "/_authenticated/admin/cbts/$cbtId/questions/$cbtModuleId/": {
      "filePath": "_authenticated/admin/cbts/$cbtId/questions/$cbtModuleId/index.tsx",
      "parent": "/_authenticated/admin/cbts/$cbtId"
    }
  }
}
ROUTE_MANIFEST_END */
