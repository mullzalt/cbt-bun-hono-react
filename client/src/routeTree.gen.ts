/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as AuthSignInImport } from './routes/_auth/sign-in'
import { Route as AuthenticatedAdminRouteImport } from './routes/_authenticated/admin/route'
import { Route as AuthenticatedAdminSubjectsIndexImport } from './routes/_authenticated/admin/subjects/index'
import { Route as AuthenticatedAdminCbtsIndexImport } from './routes/_authenticated/admin/cbts/index'
import { Route as AuthenticatedAdminUsersTeachersImport } from './routes/_authenticated/admin/users/teachers'
import { Route as AuthenticatedAdminUsersStudentsImport } from './routes/_authenticated/admin/users/students'
import { Route as AuthenticatedAdminUsersAdminsImport } from './routes/_authenticated/admin/users/admins'
import { Route as AuthenticatedAdminCbtsCbtIdIndexImport } from './routes/_authenticated/admin/cbts/$cbtId/index'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/_auth/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAdminRouteRoute = AuthenticatedAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAdminSubjectsIndexRoute =
  AuthenticatedAdminSubjectsIndexImport.update({
    id: '/subjects/',
    path: '/subjects/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminCbtsIndexRoute =
  AuthenticatedAdminCbtsIndexImport.update({
    id: '/cbts/',
    path: '/cbts/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminUsersTeachersRoute =
  AuthenticatedAdminUsersTeachersImport.update({
    id: '/users/teachers',
    path: '/users/teachers',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminUsersStudentsRoute =
  AuthenticatedAdminUsersStudentsImport.update({
    id: '/users/students',
    path: '/users/students',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminUsersAdminsRoute =
  AuthenticatedAdminUsersAdminsImport.update({
    id: '/users/admins',
    path: '/users/admins',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminCbtsCbtIdIndexRoute =
  AuthenticatedAdminCbtsCbtIdIndexImport.update({
    id: '/cbts/$cbtId/',
    path: '/cbts/$cbtId/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/users/admins': {
      id: '/_authenticated/admin/users/admins'
      path: '/users/admins'
      fullPath: '/admin/users/admins'
      preLoaderRoute: typeof AuthenticatedAdminUsersAdminsImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/users/students': {
      id: '/_authenticated/admin/users/students'
      path: '/users/students'
      fullPath: '/admin/users/students'
      preLoaderRoute: typeof AuthenticatedAdminUsersStudentsImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/users/teachers': {
      id: '/_authenticated/admin/users/teachers'
      path: '/users/teachers'
      fullPath: '/admin/users/teachers'
      preLoaderRoute: typeof AuthenticatedAdminUsersTeachersImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/cbts/': {
      id: '/_authenticated/admin/cbts/'
      path: '/cbts'
      fullPath: '/admin/cbts'
      preLoaderRoute: typeof AuthenticatedAdminCbtsIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/subjects/': {
      id: '/_authenticated/admin/subjects/'
      path: '/subjects'
      fullPath: '/admin/subjects'
      preLoaderRoute: typeof AuthenticatedAdminSubjectsIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/cbts/$cbtId/': {
      id: '/_authenticated/admin/cbts/$cbtId/'
      path: '/cbts/$cbtId'
      fullPath: '/admin/cbts/$cbtId'
      preLoaderRoute: typeof AuthenticatedAdminCbtsCbtIdIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAdminRouteRouteChildren {
  AuthenticatedAdminUsersAdminsRoute: typeof AuthenticatedAdminUsersAdminsRoute
  AuthenticatedAdminUsersStudentsRoute: typeof AuthenticatedAdminUsersStudentsRoute
  AuthenticatedAdminUsersTeachersRoute: typeof AuthenticatedAdminUsersTeachersRoute
  AuthenticatedAdminCbtsIndexRoute: typeof AuthenticatedAdminCbtsIndexRoute
  AuthenticatedAdminSubjectsIndexRoute: typeof AuthenticatedAdminSubjectsIndexRoute
  AuthenticatedAdminCbtsCbtIdIndexRoute: typeof AuthenticatedAdminCbtsCbtIdIndexRoute
}

const AuthenticatedAdminRouteRouteChildren: AuthenticatedAdminRouteRouteChildren =
  {
    AuthenticatedAdminUsersAdminsRoute: AuthenticatedAdminUsersAdminsRoute,
    AuthenticatedAdminUsersStudentsRoute: AuthenticatedAdminUsersStudentsRoute,
    AuthenticatedAdminUsersTeachersRoute: AuthenticatedAdminUsersTeachersRoute,
    AuthenticatedAdminCbtsIndexRoute: AuthenticatedAdminCbtsIndexRoute,
    AuthenticatedAdminSubjectsIndexRoute: AuthenticatedAdminSubjectsIndexRoute,
    AuthenticatedAdminCbtsCbtIdIndexRoute:
      AuthenticatedAdminCbtsCbtIdIndexRoute,
  }

const AuthenticatedAdminRouteRouteWithChildren =
  AuthenticatedAdminRouteRoute._addFileChildren(
    AuthenticatedAdminRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRouteRoute: typeof AuthenticatedAdminRouteRouteWithChildren
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRouteRoute: AuthenticatedAdminRouteRouteWithChildren,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/sign-in': typeof AuthSignInRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/admin/users/admins': typeof AuthenticatedAdminUsersAdminsRoute
  '/admin/users/students': typeof AuthenticatedAdminUsersStudentsRoute
  '/admin/users/teachers': typeof AuthenticatedAdminUsersTeachersRoute
  '/admin/cbts': typeof AuthenticatedAdminCbtsIndexRoute
  '/admin/subjects': typeof AuthenticatedAdminSubjectsIndexRoute
  '/admin/cbts/$cbtId': typeof AuthenticatedAdminCbtsCbtIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/sign-in': typeof AuthSignInRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/admin/users/admins': typeof AuthenticatedAdminUsersAdminsRoute
  '/admin/users/students': typeof AuthenticatedAdminUsersStudentsRoute
  '/admin/users/teachers': typeof AuthenticatedAdminUsersTeachersRoute
  '/admin/cbts': typeof AuthenticatedAdminCbtsIndexRoute
  '/admin/subjects': typeof AuthenticatedAdminSubjectsIndexRoute
  '/admin/cbts/$cbtId': typeof AuthenticatedAdminCbtsCbtIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/admin/users/admins': typeof AuthenticatedAdminUsersAdminsRoute
  '/_authenticated/admin/users/students': typeof AuthenticatedAdminUsersStudentsRoute
  '/_authenticated/admin/users/teachers': typeof AuthenticatedAdminUsersTeachersRoute
  '/_authenticated/admin/cbts/': typeof AuthenticatedAdminCbtsIndexRoute
  '/_authenticated/admin/subjects/': typeof AuthenticatedAdminSubjectsIndexRoute
  '/_authenticated/admin/cbts/$cbtId/': typeof AuthenticatedAdminCbtsCbtIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/admin'
    | '/sign-in'
    | '/dashboard'
    | '/admin/users/admins'
    | '/admin/users/students'
    | '/admin/users/teachers'
    | '/admin/cbts'
    | '/admin/subjects'
    | '/admin/cbts/$cbtId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/admin'
    | '/sign-in'
    | '/dashboard'
    | '/admin/users/admins'
    | '/admin/users/students'
    | '/admin/users/teachers'
    | '/admin/cbts'
    | '/admin/subjects'
    | '/admin/cbts/$cbtId'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/admin'
    | '/_auth/sign-in'
    | '/_authenticated/dashboard'
    | '/_authenticated/admin/users/admins'
    | '/_authenticated/admin/users/students'
    | '/_authenticated/admin/users/teachers'
    | '/_authenticated/admin/cbts/'
    | '/_authenticated/admin/subjects/'
    | '/_authenticated/admin/cbts/$cbtId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_auth/sign-in"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/admin",
        "/_authenticated/dashboard"
      ]
    },
    "/_authenticated/admin": {
      "filePath": "_authenticated/admin/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/admin/users/admins",
        "/_authenticated/admin/users/students",
        "/_authenticated/admin/users/teachers",
        "/_authenticated/admin/cbts/",
        "/_authenticated/admin/subjects/",
        "/_authenticated/admin/cbts/$cbtId/"
      ]
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in.tsx"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/users/admins": {
      "filePath": "_authenticated/admin/users/admins.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/users/students": {
      "filePath": "_authenticated/admin/users/students.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/users/teachers": {
      "filePath": "_authenticated/admin/users/teachers.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/cbts/": {
      "filePath": "_authenticated/admin/cbts/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/subjects/": {
      "filePath": "_authenticated/admin/subjects/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/cbts/$cbtId/": {
      "filePath": "_authenticated/admin/cbts/$cbtId/index.tsx",
      "parent": "/_authenticated/admin"
    }
  }
}
ROUTE_MANIFEST_END */
